import java.text.SimpleDateFormat

plugins {
    id "net.nemerosa.versioning" version "3.0.0"
}

configurations {
    bundleLib
}

group 'org.jboss.aerogear'
version '5.0.1-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 17

repositories {
    mavenCentral()
}

ext {
    keycloakVersion=project.properties["keycloakVersion"]
    prometheusVersion=project.properties["prometheusVersion"]
}


dependencies {
    implementation group: 'org.keycloak', name: 'keycloak-server-spi-private', version: keycloakVersion
    implementation group: 'org.keycloak', name: 'keycloak-server-spi', version: keycloakVersion
    implementation group: 'org.keycloak', name: 'keycloak-services', version: keycloakVersion
    bundleLib group: 'io.prometheus', name: 'simpleclient_common', version: prometheusVersion
    bundleLib group: 'io.prometheus', name: 'simpleclient_hotspot', version: prometheusVersion
    bundleLib group: 'io.prometheus', name: 'simpleclient_pushgateway', version: prometheusVersion
    configurations.implementation.extendsFrom(configurations.bundleLib)

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.10.0'
    testImplementation group: 'uk.org.webcompere', name: 'system-stubs-jupiter', version: '2.0.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.4.0'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'

    compileOnly "io.quarkus:quarkus-resteasy-reactive:${quarkusResteasyVersion}"
    compileOnly 'org.apache.tomcat:tomcat-servlet-api:9.0.37'

}

jar {
    from {
        configurations.bundleLib.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
            'Built-By'       : System.properties['user.name'],
            'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Build-Revision' : versioning.info.commit,
            'Created-By'     : "Gradle ${gradle.gradleVersion}",
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
            'Version'        : "${gradle.rootProject.version}"
        )
    }
}


java {
    withSourcesJar()
    withJavadocJar()
    // and/or analogously use “withJavadocJar()” to get a “javadocJar” task
}


test {
    useJUnitPlatform()
}
